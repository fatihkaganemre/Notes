{"ast":null,"code":"var _jsxFileName = \"/Users/fatih/Apps/Notes/Frontend/src/components/App.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport Header from \"./Header\";\nimport Footer from \"./Footer\";\nimport Note from \"./Note\";\nimport CreateArea from \"./CreateArea\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [notes, setNotes] = useState([]);\n  function addNote(newNote) {\n    console.log(newNote);\n    addNoteRequest(newNote);\n    setNotes(prevNotes => {\n      return [...prevNotes, newNote];\n    });\n  }\n  function deleteNote(id) {\n    setNotes(prevNotes => {\n      return prevNotes.filter((noteItem, index) => {\n        return index !== id;\n      });\n    });\n  }\n  function addNoteRequest(note) {\n    // POST request using fetch with async/await\n    const requestOptions = {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        title: note.title,\n        content: note.content\n      })\n    };\n    fetch('/addNote', requestOptions).then(response => response.json()).then(data => console.log(data.message));\n  }\n  useEffect(() => {\n    console.log(\"fetching\");\n    fetch('/getNotes') // Call the backend API\n    .then(response => response.json()).then(data => {\n      console.log(data);\n      let fetchedNotes = data.notes.map(note => {\n        return {\n          title: note.title,\n          content: note.content\n        };\n      });\n      setNotes(fetchedNotes);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CreateArea, {\n      onAdd: addNote\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), notes.map((noteItem, index) => {\n      return /*#__PURE__*/_jsxDEV(Note, {\n        id: index,\n        title: noteItem.title,\n        content: noteItem.content,\n        onDelete: deleteNote\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }, this);\n    }), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"vOaC7rmji7ux6HtcIeocV+tl1oY=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Header","Footer","Note","CreateArea","jsxDEV","_jsxDEV","App","_s","notes","setNotes","addNote","newNote","console","log","addNoteRequest","prevNotes","deleteNote","id","filter","noteItem","index","note","requestOptions","method","headers","body","JSON","stringify","title","content","fetch","then","response","json","data","message","fetchedNotes","map","children","fileName","_jsxFileName","lineNumber","columnNumber","onAdd","onDelete","_c","$RefreshReg$"],"sources":["/Users/fatih/Apps/Notes/Frontend/src/components/App.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport Header from \"./Header\";\nimport Footer from \"./Footer\";\nimport Note from \"./Note\";\nimport CreateArea from \"./CreateArea\";\n\nfunction App() {\n  const [notes, setNotes] = useState([]);\n\n  function addNote(newNote) {\n    console.log(newNote);\n    addNoteRequest(newNote);\n    setNotes(prevNotes => {\n      return [...prevNotes, newNote];\n    });\n  }\n\n  function deleteNote(id) {\n    setNotes(prevNotes => {\n      return prevNotes.filter((noteItem, index) => {\n        return index !== id;\n      });\n    });\n  }\n\n  function addNoteRequest(note) {\n        // POST request using fetch with async/await\n    const requestOptions = {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ title: note.title, content: note.content})\n    };\n\n    fetch('/addNote', requestOptions)\n    .then(response => response.json())\n    .then(data => console.log(data.message));\n  }\n\n  useEffect(() => {\n    console.log(\"fetching\");\n    fetch('/getNotes')  // Call the backend API\n      .then(response => response.json())\n      .then(data => {\n        console.log(data);\n        let fetchedNotes = data.notes.map( note => {\n          return { title: note.title, content: note.content }\n        }); \n        setNotes(fetchedNotes)\n      });\n  }, []);\n\n  return (\n    <div>\n      <Header />\n      <CreateArea onAdd={addNote} />\n      {notes.map((noteItem, index) => {\n        return (\n          <Note\n            key={index}\n            id={index}\n            title={noteItem.title}\n            content={noteItem.content}\n            onDelete={deleteNote}\n          />\n        );\n      })}\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}